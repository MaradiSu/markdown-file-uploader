import * as React from 'react';
import { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord } from '../utils/markdownUtils';
export var quote = {
  name: 'quote',
  keyCommand: 'quote',
  shortcuts: 'ctrlcmd+q',
  buttonProps: {
    'aria-label': 'Insert a quote',
    title: 'Insert a quote'
  },
  icon: /*#__PURE__*/React.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 520 520"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    d: "M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z"
  })),
  execute: function execute(state, api) {
    // Adjust the selection to encompass the whole word if the caret is inside one
    var newSelectionRange = selectWord({
      text: state.text,
      selection: state.selection
    });
    var state1 = api.setSelectionRange(newSelectionRange);
    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);
    var breaksBefore = Array(breaksBeforeCount + 1).join('\n');
    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);
    var breaksAfter = Array(breaksAfterCount + 1).join('\n'); // Replaces the current selection with the quote mark up

    api.replaceSelection("".concat(breaksBefore, "> ").concat(state1.selectedText).concat(breaksAfter));
    var selectionStart = state1.selection.start + breaksBeforeCount + 2;
    var selectionEnd = selectionStart + state1.selectedText.length;
    api.setSelectionRange({
      start: selectionStart,
      end: selectionEnd
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9xdW90ZS50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVCZWZvcmUiLCJnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVBZnRlciIsInNlbGVjdFdvcmQiLCJxdW90ZSIsIm5hbWUiLCJrZXlDb21tYW5kIiwic2hvcnRjdXRzIiwiYnV0dG9uUHJvcHMiLCJ0aXRsZSIsImljb24iLCJleGVjdXRlIiwic3RhdGUiLCJhcGkiLCJuZXdTZWxlY3Rpb25SYW5nZSIsInRleHQiLCJzZWxlY3Rpb24iLCJzdGF0ZTEiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImJyZWFrc0JlZm9yZUNvdW50Iiwic3RhcnQiLCJicmVha3NCZWZvcmUiLCJBcnJheSIsImpvaW4iLCJicmVha3NBZnRlckNvdW50IiwiZW5kIiwiYnJlYWtzQWZ0ZXIiLCJyZXBsYWNlU2VsZWN0aW9uIiwic2VsZWN0ZWRUZXh0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBS0EsS0FBWixNQUF1QixPQUF2QjtBQUVBLFNBQ0VDLGlDQURGLEVBRUVDLGdDQUZGLEVBR0VDLFVBSEYsUUFJTyx3QkFKUDtBQU1BLE9BQU8sSUFBTUMsS0FBZSxHQUFHO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUUsT0FEdUI7QUFFN0JDLEVBQUFBLFVBQVUsRUFBRSxPQUZpQjtBQUc3QkMsRUFBQUEsU0FBUyxFQUFFLFdBSGtCO0FBSTdCQyxFQUFBQSxXQUFXLEVBQUU7QUFBRSxrQkFBYyxnQkFBaEI7QUFBa0NDLElBQUFBLEtBQUssRUFBRTtBQUF6QyxHQUpnQjtBQUs3QkMsRUFBQUEsSUFBSSxlQUNGO0FBQUssSUFBQSxLQUFLLEVBQUMsSUFBWDtBQUFnQixJQUFBLE1BQU0sRUFBQyxJQUF2QjtBQUE0QixJQUFBLE9BQU8sRUFBQztBQUFwQyxrQkFDRTtBQUNFLElBQUEsSUFBSSxFQUFDLGNBRFA7QUFFRSxJQUFBLENBQUMsRUFBQztBQUZKLElBREYsQ0FOMkI7QUFhN0JDLEVBQUFBLE9BQU8sRUFBRSxpQkFBQ0MsS0FBRCxFQUFtQkMsR0FBbkIsRUFBb0M7QUFDM0M7QUFDQSxRQUFNQyxpQkFBaUIsR0FBR1gsVUFBVSxDQUFDO0FBQUVZLE1BQUFBLElBQUksRUFBRUgsS0FBSyxDQUFDRyxJQUFkO0FBQW9CQyxNQUFBQSxTQUFTLEVBQUVKLEtBQUssQ0FBQ0k7QUFBckMsS0FBRCxDQUFwQztBQUNBLFFBQU1DLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxpQkFBSixDQUFzQkosaUJBQXRCLENBQWY7QUFDQSxRQUFNSyxpQkFBaUIsR0FBR2xCLGlDQUFpQyxDQUFDZ0IsTUFBTSxDQUFDRixJQUFSLEVBQWNFLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkksS0FBL0IsQ0FBM0Q7QUFDQSxRQUFNQyxZQUFZLEdBQUdDLEtBQUssQ0FBQ0gsaUJBQWlCLEdBQUcsQ0FBckIsQ0FBTCxDQUE2QkksSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBckI7QUFFQSxRQUFNQyxnQkFBZ0IsR0FBR3RCLGdDQUFnQyxDQUFDZSxNQUFNLENBQUNGLElBQVIsRUFBY0UsTUFBTSxDQUFDRCxTQUFQLENBQWlCUyxHQUEvQixDQUF6RDtBQUNBLFFBQU1DLFdBQVcsR0FBR0osS0FBSyxDQUFDRSxnQkFBZ0IsR0FBRyxDQUFwQixDQUFMLENBQTRCRCxJQUE1QixDQUFpQyxJQUFqQyxDQUFwQixDQVIyQyxDQVUzQzs7QUFDQVYsSUFBQUEsR0FBRyxDQUFDYyxnQkFBSixXQUF3Qk4sWUFBeEIsZUFBeUNKLE1BQU0sQ0FBQ1csWUFBaEQsU0FBK0RGLFdBQS9EO0FBRUEsUUFBTUcsY0FBYyxHQUFHWixNQUFNLENBQUNELFNBQVAsQ0FBaUJJLEtBQWpCLEdBQXlCRCxpQkFBekIsR0FBNkMsQ0FBcEU7QUFDQSxRQUFNVyxZQUFZLEdBQUdELGNBQWMsR0FBR1osTUFBTSxDQUFDVyxZQUFQLENBQW9CRyxNQUExRDtBQUVBbEIsSUFBQUEsR0FBRyxDQUFDSyxpQkFBSixDQUFzQjtBQUNwQkUsTUFBQUEsS0FBSyxFQUFFUyxjQURhO0FBRXBCSixNQUFBQSxHQUFHLEVBQUVLO0FBRmUsS0FBdEI7QUFJRDtBQWpDNEIsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IElDb21tYW5kLCBUZXh0U3RhdGUsIFRleHRBcGkgfSBmcm9tICcuLyc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0QnJlYWtzTmVlZGVkRm9yRW1wdHlMaW5lQmVmb3JlLFxyXG4gIGdldEJyZWFrc05lZWRlZEZvckVtcHR5TGluZUFmdGVyLFxyXG4gIHNlbGVjdFdvcmQsXHJcbn0gZnJvbSAnLi4vdXRpbHMvbWFya2Rvd25VdGlscyc7XHJcblxyXG5leHBvcnQgY29uc3QgcXVvdGU6IElDb21tYW5kID0ge1xyXG4gIG5hbWU6ICdxdW90ZScsXHJcbiAga2V5Q29tbWFuZDogJ3F1b3RlJyxcclxuICBzaG9ydGN1dHM6ICdjdHJsY21kK3EnLFxyXG4gIGJ1dHRvblByb3BzOiB7ICdhcmlhLWxhYmVsJzogJ0luc2VydCBhIHF1b3RlJywgdGl0bGU6ICdJbnNlcnQgYSBxdW90ZScgfSxcclxuICBpY29uOiAoXHJcbiAgICA8c3ZnIHdpZHRoPVwiMTJcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgNTIwIDUyMFwiPlxyXG4gICAgICA8cGF0aFxyXG4gICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICAgIGQ9XCJNNTIwLDk1Ljc1IEw1MjAsMjI1Ljc1IEM1MjAsMzY0LjkwODkwNiA0NTcuMTI3NTc4LDQzNy4wNTA2MjUgMzI1LjA0MDQ2OSw0NzIuNDQzMTI1IEMzMDkuNTc3NTc4LDQ3Ni41ODY4NzUgMjk0LjM5NjAxNiw0NjQuODg5OTIyIDI5NC4zOTYwMTYsNDQ4Ljg4MTY0MSBMMjk0LjM5NjAxNiw0MTQuNDU3MDMxIEMyOTQuMzk2MDE2LDQwNC4yNDI4OTEgMzAwLjcyMTMyOCwzOTUuMDI1MDc4IDMxMC4zMjgxMjUsMzkxLjU1NDY4NyBDMzc3LjM1NjMyOCwzNjcuMzQyMTg3IDQxNC4zNzUsMzQ5LjcxMTA5NCA0MTQuMzc1LDI3NC41IEwzNDEuMjUsMjc0LjUgQzMxNC4zMjU3ODEsMjc0LjUgMjkyLjUsMjUyLjY3NDIxOSAyOTIuNSwyMjUuNzUgTDI5Mi41LDk1Ljc1IEMyOTIuNSw2OC44MjU3ODEyIDMxNC4zMjU3ODEsNDcgMzQxLjI1LDQ3IEw0NzEuMjUsNDcgQzQ5OC4xNzQyMTksNDcgNTIwLDY4LjgyNTc4MTIgNTIwLDk1Ljc1IFogTTE3OC43NSw0NyBMNDguNzUsNDcgQzIxLjgyNTc4MTMsNDcgMCw2OC44MjU3ODEyIDAsOTUuNzUgTDAsMjI1Ljc1IEMwLDI1Mi42NzQyMTkgMjEuODI1NzgxMywyNzQuNSA0OC43NSwyNzQuNSBMMTIxLjg3NSwyNzQuNSBDMTIxLjg3NSwzNDkuNzExMDk0IDg0Ljg1NjMyODEsMzY3LjM0MjE4NyAxNy44MjgxMjUsMzkxLjU1NDY4NyBDOC4yMjEzMjgxMywzOTUuMDI1MDc4IDEuODk2MDE1NjMsNDA0LjI0Mjg5MSAxLjg5NjAxNTYzLDQxNC40NTcwMzEgTDEuODk2MDE1NjMsNDQ4Ljg4MTY0MSBDMS44OTYwMTU2Myw0NjQuODg5OTIyIDE3LjA3NzU3ODEsNDc2LjU4Njg3NSAzMi41NDA0Njg3LDQ3Mi40NDMxMjUgQzE2NC42Mjc1NzgsNDM3LjA1MDYyNSAyMjcuNSwzNjQuOTA4OTA2IDIyNy41LDIyNS43NSBMMjI3LjUsOTUuNzUgQzIyNy41LDY4LjgyNTc4MTIgMjA1LjY3NDIxOSw0NyAxNzguNzUsNDcgWlwiXHJcbiAgICAgIC8+XHJcbiAgICA8L3N2Zz5cclxuICApLFxyXG4gIGV4ZWN1dGU6IChzdGF0ZTogVGV4dFN0YXRlLCBhcGk6IFRleHRBcGkpID0+IHtcclxuICAgIC8vIEFkanVzdCB0aGUgc2VsZWN0aW9uIHRvIGVuY29tcGFzcyB0aGUgd2hvbGUgd29yZCBpZiB0aGUgY2FyZXQgaXMgaW5zaWRlIG9uZVxyXG4gICAgY29uc3QgbmV3U2VsZWN0aW9uUmFuZ2UgPSBzZWxlY3RXb3JkKHsgdGV4dDogc3RhdGUudGV4dCwgc2VsZWN0aW9uOiBzdGF0ZS5zZWxlY3Rpb24gfSk7XHJcbiAgICBjb25zdCBzdGF0ZTEgPSBhcGkuc2V0U2VsZWN0aW9uUmFuZ2UobmV3U2VsZWN0aW9uUmFuZ2UpO1xyXG4gICAgY29uc3QgYnJlYWtzQmVmb3JlQ291bnQgPSBnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVCZWZvcmUoc3RhdGUxLnRleHQsIHN0YXRlMS5zZWxlY3Rpb24uc3RhcnQpO1xyXG4gICAgY29uc3QgYnJlYWtzQmVmb3JlID0gQXJyYXkoYnJlYWtzQmVmb3JlQ291bnQgKyAxKS5qb2luKCdcXG4nKTtcclxuXHJcbiAgICBjb25zdCBicmVha3NBZnRlckNvdW50ID0gZ2V0QnJlYWtzTmVlZGVkRm9yRW1wdHlMaW5lQWZ0ZXIoc3RhdGUxLnRleHQsIHN0YXRlMS5zZWxlY3Rpb24uZW5kKTtcclxuICAgIGNvbnN0IGJyZWFrc0FmdGVyID0gQXJyYXkoYnJlYWtzQWZ0ZXJDb3VudCArIDEpLmpvaW4oJ1xcbicpO1xyXG5cclxuICAgIC8vIFJlcGxhY2VzIHRoZSBjdXJyZW50IHNlbGVjdGlvbiB3aXRoIHRoZSBxdW90ZSBtYXJrIHVwXHJcbiAgICBhcGkucmVwbGFjZVNlbGVjdGlvbihgJHticmVha3NCZWZvcmV9PiAke3N0YXRlMS5zZWxlY3RlZFRleHR9JHticmVha3NBZnRlcn1gKTtcclxuXHJcbiAgICBjb25zdCBzZWxlY3Rpb25TdGFydCA9IHN0YXRlMS5zZWxlY3Rpb24uc3RhcnQgKyBicmVha3NCZWZvcmVDb3VudCArIDI7XHJcbiAgICBjb25zdCBzZWxlY3Rpb25FbmQgPSBzZWxlY3Rpb25TdGFydCArIHN0YXRlMS5zZWxlY3RlZFRleHQubGVuZ3RoO1xyXG5cclxuICAgIGFwaS5zZXRTZWxlY3Rpb25SYW5nZSh7XHJcbiAgICAgIHN0YXJ0OiBzZWxlY3Rpb25TdGFydCxcclxuICAgICAgZW5kOiBzZWxlY3Rpb25FbmQsXHJcbiAgICB9KTtcclxuICB9LFxyXG59O1xyXG4iXX0=